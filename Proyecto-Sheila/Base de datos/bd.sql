

CREATE TABLE CATEGORIAS
  (
    ID_CAT INTEGER NOT NULL CONSTRAINT CAT_ID_PK  PRIMARY KEY , 
    TITULO VARCHAR2 (50) NOT NULL
  ) ;



CREATE TABLE PREGUNTAS
  (
    ID_PREG          INTEGER NOT NULL CONSTRAINT PREG_ID_PK PRIMARY KEY ,
    ENUNCIADO        VARCHAR2 (100) NOT NULL ,
    CATEGORIA_ID_CAT INTEGER NOT NULL,
    CONSTRAINT PREGUNTAS_CATEGORIA_FK FOREIGN KEY ( CATEGORIA_ID_CAT )REFERENCES CATEGORIA ( ID_CAT ) ON
    DELETE CASCADE 
  ) ;



CREATE TABLE RESPUESTAS
  (
    ID_RESP          INTEGER NOT NULL CONSTRAINT RESP_ID_PK PRIMARY KEY ,
    RESPUESTA        VARCHAR2 (250) NOT NULL ,
    ACERTADA         CHAR (1) NOT NULL ,
    PREGUNTA_ID_PREG INTEGER NOT NULL, 
    CONSTRAINT RESPUESTAS_PREGUNTA_FK FOREIGN KEY ( PREGUNTA_ID_PREG ) REFERENCES PREGUNTA ( ID_PREG ) ON
    DELETE CASCADE
  ) ;


CREATE OR REPLACE PACKAGE PROCEDIMIENTOS_PROYECTO IS
PROCEDURE INSERT_CATEGORIA (P_TITULO CATEGORIAS.TITULO%TYPE);

END;
   
CREATE OR REPLACE PACKAGE BODY CATEGORIA IS
PROCEDURE INSERT_CATEGORIA (P_TITULO CATEGORIAS.TITULO%TYPE)
IS
    V_ULTIMA_CAT CATEGORIAS.ID_CAT%TYPE;
    V_TITULO_CAT CATEGORIAS.TITULO%TYPE;
    E_TITULO_REPETIDO EXCEPTION;
      
    BEGIN
      SELECT TITULO INTO V_TITULO_CAT FROM CATEGORIAS
        WHERE UPPER(TITULO) = UPPER(P_TITULO);
     if V_TITULO_CAT is not null then
      RAISE E_TITULO_REPETIDO; 
    end if;
      
    EXCEPTION
    when NO_DATA_FOUND then
        SELECT MAX(ID_CAT) INTO V_ULTIMA_CAT FROM CATEGORIAS;
     
     WHEN E_TITULO_REPETIDO THEN
       DBMS_OUTPUT.PUT_LINE('Ya existe una categoría con ese título');
       
      WHEN others THEN
       DBMS_OUTPUT.PUT_LINE('Operación incorreta'); 
    
    END INSERT_CATEGORIA;  



CREATE OR REPLACE PACKAGE PREGUNTA IS
PROCEDURE INSERT_PREGUNTA (P_ENUNCIADO PREGUNTAS.ENUNCIADO%TYPE);
END;

CREATE OR REPLACE PACKAGE BODY PREGUNTA IS
PROCEDURE INSERT_PREGUNTA (P_ENUNCIADO PREGUNTAS.ENUNCIADO%TYPE)
                          
IS
    V_ULTIMA_PRE CATEGORIAS.ID_CAT%TYPE;
    V_TITULO_CAT CATEGORIAS.TITULO%TYPE;
    E_ENUNCIADO_REPETIDO EXCEPTION;
      
    BEGIN
      SELECT TITULO INTO V_TITULO_CAT FROM CATEGORIAS
        WHERE UPPER(TITULO) = UPPER(P_TITULO);
     if V_TITULO_CAT is not null then
      RAISE E_TITULO_REPETIDO; 
    end if;
      
    EXCEPTION
    when NO_DATA_FOUND then
        SELECT MAX(ID_CAT) INTO V_ULTIMA_CAT FROM CATEGORIAS;
     
     WHEN E_TITULO_REPETIDO THEN
       DBMS_OUTPUT.PUT_LINE('Ya existe una categoría con ese título');
       
      WHEN others THEN
       DBMS_OUTPUT.PUT_LINE('Operación incorreta'); 
    
    END INSERT_CATEGORIA;  

  
  


END PROCEDIMIENTOS_PROYECTO;



